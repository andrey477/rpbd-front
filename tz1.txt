Роли приложения: racer, admin


------------------------------------------------------------------------------------------------------------------------
Страница соревнований
Функционал:
1. список всех соревнований (ВСЕ РОЛИ) // BodyCompetition[]
2. кнопка создания соревнования, всплывает модальное окно (АДМИН)

------------------------------------------------------------------------------------------------------------------------
СПИСОК ВСЕХ СОРЕВНОВАНИЙ. По сути это главная часть приложения, каждая роль видит разный функциона
Список будет в виде таблицы с табами, которые отражают стадию соревнований

Табы: Заявки на участие, квалификация, 1 этап, 2 этап, 3 этап, Итог
Табы открываются по мере продвижения соревнования

Роль racer:
1) Видит информацию о заездах всех участников
2) Есть кнопка принять участие в соревнование
3) Есть кнопка совершить заезд:
   interface Response {
     racerId;
   }
   Кнопка не активна пока все судьи не выставят свои оценки

------------------------------------------------------------------------------------------------------------------------
Создание соревнования:
-Модальное окно. Данные:

interface Request {
  name: string;
  attempts: number;
}

interface BodyCompetition {
  racers: Racer[];
  stage: Stage[]; (record, qualification, 1, 2, 3, total)
  isOpen: boolean;
  race_1: Race[]; // информация о заездах участников 1 этапа
  race_2: Race[]; // информация о заездах участников 1 этапа
  race_3: Race[]; // информация о заездах участников 1 этапа
  total: Total[]; // итоги участников
  attempts: number; // сколько позволено попыток в данном соревновании
}

interface Response {
  content: BodyCompetition[];
}

------------------------------------------------------------------------------------------------------------------------
Общие сущности:

interface Racer {
  person: Person;
  vehicle: Vehicle;
  approved: boolean; // статус заявки. При старте этапа квалификации участники с approved = false удаляются
  number: number; // номер участника
}

enum Stage {
  RECORD = 'record',
  qualification = 'qualification',
  stage_1 = 'stage_1',
  stage_2 = 'stage_2',
  stage_3 = 'stage_3',
  total = 'total',
}

// Информация о заезде участника в конкретном этапе
interface Race {
  attempts: number; // попытки
  rating: number[]; // оценки судей
}
